#---------------------------------------------------------------------------# 
# main()
#---------------------------------------------------------------------------# 
snippet main
	/**
	 * @brief Main entry point of the program
	 * @param argc The number of command line arguments
	 * @param argv The command line arguments
	 * @return 0;
	 */
	int main(int argc, const char *argv[])
	{
		${1}
		return 0;
	}

#---------------------------------------------------------------------------# 
# #include <...>
#---------------------------------------------------------------------------# 
snippet inc
	#include <${1:stdio}.h>${2}

#---------------------------------------------------------------------------# 
# #include "..."
#---------------------------------------------------------------------------# 
snippet Inc
	#include "${1:`Filename("$1.h")`}"${2}

#---------------------------------------------------------------------------# 
# #ifndef
#---------------------------------------------------------------------------# 
snippet #ifndef
	#ifndef $1
	#   define ${1:SYMBOL} ${2:value}
	#endif${3}

#---------------------------------------------------------------------------# 
# #define
#---------------------------------------------------------------------------# 
snippet #def
	#define ${1:CONSTANT} ${2:VALUE}    //! $1

#---------------------------------------------------------------------------# 
# #ifdef
#---------------------------------------------------------------------------# 
snippet #ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif

#---------------------------------------------------------------------------# 
# preprocessor if statement
#---------------------------------------------------------------------------# 
snippet #if
	#if ${1:FOO}
		${2}
	#endif

#---------------------------------------------------------------------------# 
# header include guard
#---------------------------------------------------------------------------# 
snippet guard
	#ifndef ${1:`toupper(Filename('', 'UNTITLED'))`}
	#define $1

	${2}

	#endif /* end of include guard: $1 */
#---------------------------------------------------------------------------# 
# if condition
#---------------------------------------------------------------------------# 
snippet if
	if (${1:/* condition */}) {
		${2:/* code */}
	}

#---------------------------------------------------------------------------# 
# else if condition
#---------------------------------------------------------------------------# 
snippet elif
	else if (${1:/* condition */}) {
		${2:/* code */}
	}

#---------------------------------------------------------------------------# 
# else condition
#---------------------------------------------------------------------------# 
snippet else
	else {
		${1}
	}

#---------------------------------------------------------------------------# 
# switch condition
#---------------------------------------------------------------------------# 
snippet switch
	switch (${1:input}) {
		case ${2:value}:
			${3:/* code */}
			break;

		default:
			${3}
	}

#---------------------------------------------------------------------------# 
# Ternary condition
#---------------------------------------------------------------------------# 
snippet ??
	${1:/* condition */} ? ${2:a} : ${3:b}

#---------------------------------------------------------------------------# 
# do-while loop
#---------------------------------------------------------------------------# 
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});

#---------------------------------------------------------------------------# 
# while loop
#---------------------------------------------------------------------------# 
snippet while
	while (${1:/* condition */}) {
		${2:/* code */}
	}

#---------------------------------------------------------------------------# 
# for loop
#---------------------------------------------------------------------------# 
snippet for
	for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4:/* code */}
	}

#---------------------------------------------------------------------------# 
# Function
#---------------------------------------------------------------------------# 
snippet func
	${1:void} ${2:function_name}(${3})
	{
		${4:/* code */}
	}

#---------------------------------------------------------------------------# 
# Function Declaration
#---------------------------------------------------------------------------# 
snippet fund
	${1:void} ${2:function_name}(${3});
	${4}

#---------------------------------------------------------------------------# 
# typedef
#---------------------------------------------------------------------------# 
snippet type
	typedef ${1:int} ${2:MyCustomType};
	${3}

#---------------------------------------------------------------------------# 
# struct
#---------------------------------------------------------------------------# 
snippet struct
	/**
	 * @brief
	 */
	typedef struct ${2:_$1 }{
		${3:/* data */}
	} ${1:`Filename('$1_t', 'name')`};

#---------------------------------------------------------------------------# 
# Typdef enum
#---------------------------------------------------------------------------# 
snippet enum
	/**
	 * @brief
	 */
	typedef enum {
		${1:/* data */}     //! $1
	} ${2:foo};

#---------------------------------------------------------------------------# 
# printf
#---------------------------------------------------------------------------# 
snippet print
	printf("${1:%s}\n"${2});
	${3}

#---------------------------------------------------------------------------# 
# fprintf
#---------------------------------------------------------------------------# 
snippet fprint
	fprintf(${1:stderr}, "${2:%s}\n"${3});
	${4}

#---------------------------------------------------------------------------#
# block comment
#---------------------------------------------------------------------------# 
snippet $l
	//---------------------------------------------------------------------------// 
	// ${1}
	//---------------------------------------------------------------------------// 
	${2}
